[{"D:\\Coding\\blog-project\\frontend\\src\\index.js":"1","D:\\Coding\\blog-project\\frontend\\src\\App.js":"2","D:\\Coding\\blog-project\\frontend\\src\\views\\blogs.js":"3","D:\\Coding\\blog-project\\frontend\\src\\views\\categories.js":"4","D:\\Coding\\blog-project\\frontend\\src\\views\\specialblogs.js":"5","D:\\Coding\\blog-project\\frontend\\src\\controllers\\api.js":"6","D:\\Coding\\blog-project\\frontend\\src\\views\\blogs_detail.js":"7","D:\\Coding\\blog-project\\frontend\\src\\views\\allInclusiveBlogs.js":"8","D:\\Coding\\blog-project\\frontend\\src\\views\\city-tours.js":"9","D:\\Coding\\blog-project\\frontend\\src\\views\\beachHolidaysBlogs.js":"10","D:\\Coding\\blog-project\\frontend\\src\\views\\loader.js":"11","D:\\Coding\\blog-project\\frontend\\src\\views\\NewBlog.js":"12"},{"size":302,"mtime":1664218978562,"results":"13","hashOfConfig":"14"},{"size":5286,"mtime":1665237002237,"results":"15","hashOfConfig":"14"},{"size":545,"mtime":1664218978565,"results":"16","hashOfConfig":"14"},{"size":621,"mtime":1665237002242,"results":"17","hashOfConfig":"14"},{"size":542,"mtime":1664218978570,"results":"18","hashOfConfig":"14"},{"size":753,"mtime":1665237002238,"results":"19","hashOfConfig":"14"},{"size":581,"mtime":1664218978566,"results":"20","hashOfConfig":"14"},{"size":704,"mtime":1664218978563,"results":"21","hashOfConfig":"14"},{"size":693,"mtime":1664218978568,"results":"22","hashOfConfig":"14"},{"size":706,"mtime":1664218978564,"results":"23","hashOfConfig":"14"},{"size":220,"mtime":1664218978569,"results":"24","hashOfConfig":"14"},{"size":4087,"mtime":1665237002241,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"n6lemc",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Coding\\blog-project\\frontend\\src\\index.js",[],[],[],"D:\\Coding\\blog-project\\frontend\\src\\App.js",["65"],[],"import { Routes, Route } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\nimport { getCategories, getBlogs, insertBlogPost } from './controllers/api'\r\nimport Categories from './views/categories'\r\nimport Blogs from './views/blogs'\r\nimport SpecialBlogs from './views/specialblogs'\r\nimport AllInclusiveBlogs from './views/allInclusiveBlogs'\r\nimport BeachHolidaysBlogs from './views/beachHolidaysBlogs'\r\nimport CityToursBlogs from './views/city-tours.js'\r\n\r\nimport NewBlog from './views/NewBlog'\r\nimport Blogdetail from './views/blogs_detail'\r\nimport Loader from './views/loader'\r\n\r\nfunction App() {\r\n    const [data, setData] = useState({\r\n        categories: [],\r\n        blogs: [],\r\n        specialblogs: [],\r\n        allInclusiveBlogs: [],\r\n        holidaysBlogs: [],\r\n        cityToursBlogs: [],\r\n    })\r\n    const [isDataLoading, setIsDataLoading] = useState(true)\r\n    const addBlog = async (blog) => {\r\n        const newblog = await insertBlogPost(blog)\r\n        setData((prev) => {\r\n            return { ...prev, newblog }\r\n        })\r\n    }\r\n    async function readData() {\r\n        const blogs = await getBlogs()\r\n        const categories = await getCategories()\r\n        const specialblogs = blogs.filter((blog) => {\r\n            return blog.special === true\r\n        })\r\n        const nonspecialblogs = blogs.filter((blog) => {\r\n            return blog.special === false\r\n        })\r\n        const allInclusiveBlogs = blogs.filter((blog) => {\r\n            return blog.category_name === 'all-inclusive'\r\n        })\r\n        const holidaysBlogs = blogs.filter((blog) => {\r\n            return blog.category_name === 'beach-holidays'\r\n        })\r\n        const cityToursBlogs = blogs.filter((blog) => {\r\n            return blog.category_name === 'city-tours'\r\n        })\r\n\r\n        console.log('Blogs', blogs)\r\n        setData((prev) => {\r\n            return {\r\n                ...prev,\r\n                categories,\r\n                blogs,\r\n                nonspecialblogs,\r\n                specialblogs,\r\n                allInclusiveBlogs,\r\n                holidaysBlogs,\r\n                cityToursBlogs,\r\n            }\r\n        })\r\n        if (data) setIsDataLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        readData()\r\n    }, [])\r\n\r\n    return isDataLoading ? (\r\n        <Loader />\r\n    ) : (\r\n        <div id=\"wrapper\">\r\n            <header>\r\n                <h2>Travel blog</h2>\r\n            </header>\r\n            <div id=\"content\">\r\n                <nav>\r\n                    <input className=\"menu-btn\" type=\"checkbox\" id=\"menu-btn\" />\r\n                    <label className=\"menu-icon\" htmlFor=\"menu-btn\">\r\n                        <span className=\"navicon\"></span>\r\n                    </label>\r\n                    <Categories categories={data.categories} />\r\n                </nav>\r\n                <main>\r\n                    <Routes>\r\n                        <Route\r\n                            path=\"/all-inclusive\"\r\n                            element={\r\n                                <AllInclusiveBlogs\r\n                                    allInclusiveBlogs={data.allInclusiveBlogs}\r\n                                />\r\n                            }\r\n                        />\r\n                        <Route\r\n                            path=\"/all-inclusive/:id\"\r\n                            element={<Blogdetail blogs={data.blogs} />}\r\n                        />\r\n                        <Route\r\n                            path=\"/beach-holidays\"\r\n                            element={\r\n                                <BeachHolidaysBlogs\r\n                                    holidaysBlogs={data.holidaysBlogs}\r\n                                />\r\n                            }\r\n                        />\r\n                        <Route\r\n                            path=\"/beach-holidays/:id\"\r\n                            element={<Blogdetail blogs={data.blogs} />}\r\n                        />\r\n                        <Route\r\n                            path=\"/city-tours\"\r\n                            element={\r\n                                <CityToursBlogs\r\n                                    cityToursBlogs={data.cityToursBlogs}\r\n                                />\r\n                            }\r\n                        />\r\n                        <Route\r\n                            path=\"/city-tours/:id\"\r\n                            element={<Blogdetail blogs={data.blogs} />}\r\n                        />\r\n                        <Route\r\n                            path=\"/\"\r\n                            element={<Blogs blogs={data.nonspecialblogs} />}\r\n                        />\r\n                        <Route\r\n                            path=\"/:id\"\r\n                            element={<Blogdetail blogs={data.blogs} />}\r\n                        />\r\n                        <Route\r\n                            path=\"/newblog\"\r\n                            element={<NewBlog addBlog={addBlog} />}\r\n                        />\r\n                    </Routes>\r\n                </main>\r\n                <aside>\r\n                    <h3>Special offers</h3>\r\n                    <SpecialBlogs specialblogs={data.specialblogs} />\r\n                </aside>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","D:\\Coding\\blog-project\\frontend\\src\\views\\blogs.js",[],[],"D:\\Coding\\blog-project\\frontend\\src\\views\\categories.js",[],[],"D:\\Coding\\blog-project\\frontend\\src\\views\\specialblogs.js",[],[],"D:\\Coding\\blog-project\\frontend\\src\\controllers\\api.js",[],[],"D:\\Coding\\blog-project\\frontend\\src\\views\\blogs_detail.js",["66"],[],"import { useParams } from \"react-router-dom\";\r\n\r\nexport default function Blogdetail({blogs}) {\r\n    const {id} = useParams();\r\n    const blog = blogs.filter(b => {return b.id == id;})[0];\r\n    //console.log(blog);\r\n    const bdate = new Date(blog.date_time).toLocaleDateString();\r\n    return (\r\n        <section className=\"preview\" key={blog.id}>\r\n            <h3>{blog.title}</h3>\r\n            <p className=\"small\">from {bdate} by {blog.author_name}</p>\r\n            <p>{blog.content_text}</p>\r\n            <img src={blog.picture} alt={blog.title}/>\r\n        </section>\r\n    );\r\n}","D:\\Coding\\blog-project\\frontend\\src\\views\\allInclusiveBlogs.js",[],[],"D:\\Coding\\blog-project\\frontend\\src\\views\\city-tours.js",[],[],"D:\\Coding\\blog-project\\frontend\\src\\views\\beachHolidaysBlogs.js",[],[],"D:\\Coding\\blog-project\\frontend\\src\\views\\loader.js",[],[],"D:\\Coding\\blog-project\\frontend\\src\\views\\NewBlog.js",[],[],{"ruleId":"67","severity":1,"message":"68","line":68,"column":8,"nodeType":"69","endLine":68,"endColumn":10,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":5,"column":49,"nodeType":"73","messageId":"74","endLine":5,"endColumn":51},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'readData'. Either include it or remove the dependency array.","ArrayExpression",["75"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"76","fix":"77"},"Update the dependencies array to be: [readData]",{"range":"78","text":"79"},[2262,2264],"[readData]"]